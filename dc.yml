# docker-compose.yml using the wurstmeister images
version: '3.2'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      kafkanet:
  kafka:
    image: wurstmeister/kafka:latest
    ports:
      - "9092:9092"
    hostname: kafka
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ADVERTISED_HOSTNAME: kafka
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      kafkanet:
  webapp:
    image: gkin/kafka-streaming:latest
    depends_on:
      - "zookeeper"
      - "kafka"
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLIENT_ADDRESS: kafka:9092
    networks:
      webnet:
      kafkanet:
networks:
  webnet:
  kafkanet:
    driver: overlay