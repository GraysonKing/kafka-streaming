# docker-compose.yml using the bitnami images
version: '3'
services:
  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    deploy:
      restart_policy:
        condition: on-failure
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - 'zookeeper_data:/bitnami'
    networks:
      - kafka
  kafka:
    image: 'bitnami/kafka:latest'
    depends_on:
      - "zookeeper"
    deploy:
      restart_policy:
        condition: on-failure
    ports:
      - '9092:9092'
    volumes:
      - './res/wait-for-it.sh:/bitnami'
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=127.0.0.1:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    networks:
      - kafka
    #command: ["./wait-for-it.sh -t 10", "127.0.0.1:2181"]
  webapp:
    image: gkin/kafka-streaming:latest
    depends_on:
      - "zookeeper"
      - "kafka"
    deploy:
      replicas: 5
      resources:
        limits:
          cpus: "0.1"
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      - "8080:80"
    volumes:
      - 'webapp_data:/webapp'
    environment:
      - KAFKA_CLIENT_ADDRESS=127.0.0.1:9092
    networks:
      - webnet
      - kafka
volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  webapp_data:
    driver: local
networks:
  webnet:
  kafka: